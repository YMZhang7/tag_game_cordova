// object for storing the info about active player
let this_player = {
    // index
    // name
    // toChase
    // level
    // location_x
    // location_y
    // ========= level 2
    // iceCube
    // shields
    // ========= level 3
    // rockets
    // invisibilityCloak
}; 
let players = []; // retrieve from server
let playerName = "";
let playersCaught = 0;
var catchButtonClicked = false;


document.addEventListener('deviceready', onDeviceReady, false);

const goUp_button = document.getElementById('up-key');
const goDown_button = document.getElementById('down-key');
const goLeft_button = document.getElementById('left-key');
const goRight_button = document.getElementById('right-key');
const catch_button = document.getElementById('catch-button')

function getIndex(){
    for (var i = 0; i < players.length; i++){
        if (players[i]['name'] == playerName){
            return i;
        }
    }
}

var seconds = 60;
const second = rxjs.interval(1000);
var timer = second.pipe(rxjs.operators.take(seconds));
var timerSubscription;

// const goDown = rxjs.of(players).pipe(
//     rxjs.operators.tap(() => {
//         let player = players[getIndex()];
//         if (player['location_y'] <= 85){
//             player['location_y'] += 5;
//             players[player['index']]['location_y'] += 5;
//         } else {
//             player['location_y'] = 90;
//             players[player['index']]['location_y'] = 90;
//         }
//         document.getElementById(playerName).style.top = player['location_y'] + "%";
//         socket.emit('goDown', player['index']);
//         if (player['toChase']){
//             var catching = false;
//             for (let i = 0; i < players.length; i++){
//                 if (players[i]['index'] != player['index']){
//                     if (!players[i]['toChase']){
//                         if (canCatch(players[i], player)){
//                             // enable catch button
//                             catch_button.style.backgroundColor = "rgb(113, 218, 113)";
//                             catching = true;
//                         }
//                     }
//                 }
//             }
//             if (!catching){
//                 catch_button.style.backgroundColor = "gray";
//             }
//         }
//     })
// );

// const goUp = rxjs.of(players).pipe(
//     rxjs.operators.tap(players => {
//         var player = players[getIndex()];
//         if (player['location_y'] >= 5){
//             player['location_y'] -= 5;
//             players[player['index']]['location_y'] -= 5;
//         } else {
//             player['location_y'] = 0;
//             players[player['index']]['location_y'] = 0;
//         }
//         document.getElementById(playerName).style.top = player['location_y'] + "%";
//         socket.emit('goUp', player['index']);
//         if (player['toChase']){
//             var catching = false;
//             for (let i = 0; i < players.length; i++){
//                 if (players[i]['index'] != player['index']){
//                     if (!players[i]['toChase']){
//                         if (canCatch(players[i], player)){
//                             // enable catch button
//                             catch_button.style.backgroundColor = "rgb(113, 218, 113)";
//                             catching = true;
//                         }
//                     }
//                 }
//             }
//             if (!catching){
//                 catch_button.style.backgroundColor = "gray";
//             }
//         }
//     })
// );

// const goLeft = rxjs.of(players).pipe(
//     rxjs.operators.tap(players => {
//         var player = players[getIndex()];
//         if (player['location_x'] >= 5){
//             player['location_x'] -= 5;
//             players[player['index']]['location_x'] -= 5;
//         } else {
//             player['location_x'] = 0;
//             players[player['index']]['location_x'] = 0;
//         }
//         document.getElementById(playerName).style.left = player['location_x'] + "%";
//         socket.emit('goLeft', player['index']);
//         if (player['toChase']){
//             var catching = false;
//             for (let i = 0; i < players.length; i++){
//                 if (players[i]['index'] != player['index']){
//                     if (!players[i]['toChase']){
//                         if (canCatch(players[i], player)){
//                             // enable catch button
//                             catch_button.style.backgroundColor = "rgb(113, 218, 113)";
//                             catching = true;
//                         }
//                     }
//                 }
//             }
//             if (!catching){
//                 catch_button.style.backgroundColor = "gray";
//             }
//         }
//     })
// );

// const goRight = rxjs.of(players).pipe(
//     rxjs.operators.tap(players => {
//         var player = players[getIndex()];
//         if (player['location_x'] <= 85){
//             player['location_x'] += 5;
//             players[player['index']]['location_x'] += 5;
//         } else {
//             player['location_x'] = 90;
//             players[player['index']]['location_x'] = 90;
//         }
//         document.getElementById(playerName).style.left = player['location_x'] + "%";
//         socket.emit('goRight', player['index']);
//         if (player['toChase']){
//             var catching = false;
//             for (let i = 0; i < players.length; i++){
//                 if (players[i]['index'] != player['index']){
//                     if (!players[i]['toChase']){
//                         if (canCatch(players[i], player)){
//                             // enable catch button
//                             catch_button.style.backgroundColor = "rgb(113, 218, 113)";
//                             catching = true;
//                         }
//                     }
//                 }
//             }
//             if (!catching){
//                 catch_button.style.backgroundColor = "gray";
//             }
//         } 
//     })
// );

// const catchPlayers = rxjs.of(this_player).pipe(
//     rxjs.operators.tap(this_player => {
        
//     }),
// );

// rxjs.fromEvent(goDown_button, 'click').pipe(
//     rxjs.operators.switchMap(()=>goDown),
// ).subscribe();
rxjs.fromEvent(goDown_button, 'click').subscribe(() => {
    let index = getIndex();
    if (players[index]['location_y'] <= 85){
        players[index]['location_y'] += 5;
    } else {
        players[index]['location_y'] = 90;
    }
    document.getElementById(playerName).style.top = players[index]['location_y'] + "%";
    socket.emit('goDown', index);
    if (players[index]['toChase']){
        var catching = false;
        for (let i = 0; i < players.length; i++){
            if (players[i]['index'] != index){
                if (!players[i]['toChase']){
                    if (canCatch(players[i], players[index])){
                        // enable catch button
                        catch_button.style.backgroundColor = "rgb(113, 218, 113)";
                        catching = true;
                    }
                }
            }
        }
        if (!catching){
            catch_button.style.backgroundColor = "gray";
        }
    }
});

rxjs.fromEvent(goUp_button, 'click').subscribe(()=>{
    var index = getIndex();
    if (players[index]['location_y'] >= 5){
        players[index]['location_y'] -= 5;
    } else {
        players[index]['location_y'] = 0;
    }
    document.getElementById(playerName).style.top = players[index]['location_y'] + "%";
    socket.emit('goUp', index);
    if (players[index]['toChase']){
        var catching = false;
        for (let i = 0; i < players.length; i++){
            if (players[i]['index'] != index){
                if (!players[i]['toChase']){
                    if (canCatch(players[i], players[index])){
                        // enable catch button
                        catch_button.style.backgroundColor = "rgb(113, 218, 113)";
                        catching = true;
                    }
                }
            }
        }
        if (!catching){
            catch_button.style.backgroundColor = "gray";
        }
    }
});

rxjs.fromEvent(goLeft_button, 'click').subscribe(()=>{
    var index = getIndex();
    if (players[index]['location_x'] >= 5){
        players[index]['location_x'] -= 5;
    } else {
        players[index]['location_x'] = 0;
    }
    document.getElementById(playerName).style.left = players[index]['location_x'] + "%";
    socket.emit('goLeft', index);
    if (players[index]['toChase']){
        var catching = false;
        for (let i = 0; i < players.length; i++){
            if (players[i]['index'] != index){
                if (!players[i]['toChase']){
                    if (canCatch(players[i], players[index])){
                        // enable catch button
                        catch_button.style.backgroundColor = "rgb(113, 218, 113)";
                        catching = true;
                    }
                }
            }
        }
        if (!catching){
            catch_button.style.backgroundColor = "gray";
        }
    }
});

rxjs.fromEvent(goRight_button, 'click').subscribe(()=>{
    var index = getIndex();
    if (players[index]['location_x'] <= 85){
        players[index]['location_x'] += 5;
    } else {
        players[index]['location_x'] = 90;
    }
    document.getElementById(playerName).style.left = players[index]['location_x'] + "%";
    socket.emit('goRight', index);
    if (players[index]['toChase']){
        var catching = false;
        for (let i = 0; i < players.length; i++){
            if (players[i]['index'] != index){
                if (!players[i]['toChase']){
                    if (canCatch(players[i], players[index])){
                        // enable catch button
                        catch_button.style.backgroundColor = "rgb(113, 218, 113)";
                        catching = true;
                    }
                }
            }
        }
        if (!catching){
            catch_button.style.backgroundColor = "gray";
        }
    } 
});

rxjs.fromEvent(catch_button, 'click').subscribe(() => {
    if (players[getIndex()]['toChase']){
        for (var i = 0; i < players.length; i++){
            if (!players[i]['toCatch'] && getIndex() != i && canCatch(players[i], players[getIndex()])){
                console.log('index.js caught');
                catchButtonClicked = true;
                socket.emit('caught', i);
            }
        }
    }
});

// rxjs.of(players).pipe(
//     rxjs.operators.tap((data) => {
//         for (let i = 0; i < data.length; i++){
//             createPlayer()
//         }
//     })
// ).subscribe();

function onDeviceReady() {
    console.log('Running cordova-' + cordova.platformId + '@' + cordova.version);
    document.getElementById('deviceready').classList.add('ready');
}

rxjs.fromEvent(document.getElementById('exitButton'), 'click').subscribe(() => socket.emit('playerQuit', this_player['index']));

// function onConfirm(buttonIndex){
//     console.log(buttonIndex);
//     if (buttonIndex == 1){
//         let playground = document.getElementsByClassName('playground')[0];
//         while(playground.firstChild){
//             playground.removeChild(playground.firstChild);
//         }
//         document.getElementById('gameroom-page').style.visibility = "hidden";
//         document.getElementById('homepage').style.visibility = "visible";
//         current_page = 'homepage';
//         previous_page = 'homepage';
//     }
// }

// used in socket.js
// function renderGame(){
//     document.getElementById('level').innerHTML = "Level " + players[getIndex()]['level'];
//     for (let i = 0; i < players.length; i++){
//         createPlayer(players[i]);
//     }
// }

// function exitGame(){
//     let playground = document.getElementsByClassName('playground')[0];
//     while(playground.firstChild){
//         playground.removeChild(playground.firstChild);
//     }
//     document.getElementById('gameroom-page').style.visibility = "hidden";
//     document.getElementById('homepage').style.visibility = "visible";
//     current_page = 'homepage';
//     previous_page = 'homepage';
// }

// Extract info and start the game
function getRegistrationInfo(){
    console.log(players.length);
    let name = document.getElementById('nickname').value;
    if (nameUsed(name)){
        alert("This name is invalid. Please choose another one.");
        return false;
    } else {
        this_player['index'] = players.length;
        this_player['name'] = name;
        playerName = name;
        
        this_player['level'] = 1;
        let toChase;
        if (document.getElementById('chase').checked){
            toChase = true;
            this_player['location_x'] = 0;
            this_player['location_y'] = 0;
        } else {
            toChase = false;
            this_player['location_x'] = 90;
            this_player['location_y'] = 90;
        }
        this_player['toChase'] = toChase;
        
        socket.emit('newPlayer', this_player);
        return true;
    }
}

// To create HTML elements for a player
function createPlayer(player){
    // create circle and set content
    const player_circle = document.createElement('div');
    // player_circle.id = "currentPlayer";
    player_circle.id = player['name'];
    const name = document.createTextNode(player['name']);
    player_circle.appendChild(name);
    player_circle.className = "player";
    // set background colour
    if (player['level'] == 1){
        player_circle.style.backgroundColor = "rgb(128, 255, 128)";
    } else if (player['level'] == 2){
        player_circle.style.backgroundColor = "rgb(51, 51, 255)";
        // change font colour
        player_circle.style.color = "white";
    } else {
        player_circle.style.backgroundColor = "rgb(255, 255, 0)";
    }
    // set border
    if (player['toChase']){
        player_circle.style.border = "4px solid orange";
    } 
    player_circle.style.top = player['location_y'] + "%";
    player_circle.style.left = player['location_x'] + "%";
    // add circle to playground
    document.getElementsByClassName('playground')[0].appendChild(player_circle);
}

function upgradeToLevel2(index){
    if (players[index]['toChase']){
        players[index]['iceCube'] = 2;
        document.getElementById('backpack').innerHTML = "Ice cube: " + players[getIndex()]['iceCube'];
    } else {
        players[index]['shields'] = 2;
        document.getElementById('backpack').innerHTML = "Shields: " + players[getIndex()]['shields'];
        seconds = 120;
        // timer.next(seconds);
        timer = second.pipe(rxjs.operators.take(seconds));
        timerSubscription = timer.subscribe(
            (sec) => {
                var newWidth = 100 * (seconds - sec - 1) / seconds;
                document.getElementById('time').style.width = newWidth + "%";
                if (sec == (seconds - 1)){
                    alert('level up!');
                }
            },
        );
    }
    players[index]['level'] = 2;
    document.getElementById('level').innerHTML = "Level 2";
    updatePlayerCircle(players[index]["name"], 2);
}

function upgradeToLevel3(player){
    if (player['toChase']){
        delete player.iceCube;
        player['rocket'] = 2;
    } else {
        delete player.shields;
        player['invisibilityCloak'] = 2;
    }
    player['level'] = 3;
}

function downgradeToLevel2(player){
    if (player['toChase']){
        delete player.rocket;
        player['iceCube'] = 2;
    } else {
        delete player.invisibilityCloak;
        player['shields'] = 2;
    }
    player['level'] = 2;
}

function downgradeToLevel1(player){
    if (player['toChase']){
        delete player.iceCube;
    } else {
        delete player.shields;
    }
    player['level'] = 1;
}

function canCatch(player1, player2){
    let x1 = player1['location_x'];
    let x2 = player2['location_x'];
    let y1 = player1['location_y'];
    let y2 = player2['location_y'];
    let distance_x = Math.abs(x1 - x2);
    let distance_y = Math.abs(y1 - y2);
    if (distance_x <= 5 && distance_y <= 5){
        return true;
    } else {
        return false;
    }
}

function nameUsed(name){
    for (var i = 0; i < players.length; i++){
        if (players[i]['name'] == name){
            return true;
        }
    }
    return false;
}

function updatePlayerCircle(name, level){
    console.log('here');
    if (level == 2){
        var player = document.getElementById(name);
        player.style.backgroundColor = "rgb(51, 51, 255)";
        player.style.color = "white";
    }
}