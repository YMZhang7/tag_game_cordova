// client side
// var ipAddr = "";
// $.getJSON("https://api.ipify.org?format=json", function(data) {
//     console.log(data); 
//     ipAddr = "http://" + data.ip + ":3000";
//     // alert(ipAddr);
// })
var socket=io.connect('http://192.168.0.13:3000');
// var socket=io.connect(ipAddr);
// var socket=io.connect('http://10.0.2.2:3000'); // works with android emulator
// var socket=io.connect('http://localhost:3000');
// var socket=io.connect('http://127.0.0.1:3000');


rxjs.fromEvent(socket, 'connect').subscribe(() => {
    console.log('one player joined');
    socket.emit('requestPlayers');
});

rxjs.fromEvent(socket, 'disconnect').subscribe(() =>{
    alert('Something went wrong... You are disconnected');
    document.getElementById('backpack').style.visibility = "hidden";
    socket.emit('playerQuit', getIndex());
    current_screen = homepage_screen;
    loadScreen();
});

rxjs.fromEvent(socket, 'players').subscribe((data) => {
    players = data;
    console.log(players.length);
});

rxjs.fromEvent(socket, 'createNewPlayer').subscribe((data)=> {
    // alert('new player joined!');
    for (var i = 0; i < data.length; i++){
        if (document.getElementById(data[i]['name']) == null){
            createPlayer(data[i]);
        }
    }
    players = data;
});

rxjs.fromEvent(socket, 'goDown').subscribe((index)=>{
    if(players[index]['location_y'] <= 85){
        players[index]['location_y'] += 5;
    } else {
        players[index]['location_y'] = 90;
    }
    document.getElementById(players[index]['name']).style.top = players[index]['location_y'] + "%";
    updateCatchAlert();
});

rxjs.fromEvent(socket, 'goDownRocket').subscribe((index)=>{
    if(players[index]['location_y'] <= 80){
        players[index]['location_y'] += 10;
    } else {
        players[index]['location_y'] = 90;
    }
    document.getElementById(players[index]['name']).style.top = players[index]['location_y'] + "%";
    updateCatchAlert();
});

rxjs.fromEvent(socket, 'goUp').subscribe((index)=>{
    if(players[index]['location_y'] >= 5){
        players[index]['location_y'] -= 5;
    } else {
        players[index]['location_y'] = 0;
    }
    document.getElementById(players[index]['name']).style.top = players[index]['location_y'] + "%";
    updateCatchAlert();    
});

rxjs.fromEvent(socket, 'goUpRocket').subscribe((index)=>{
    if(players[index]['location_y'] >= 10){
        players[index]['location_y'] -= 10;
    } else {
        players[index]['location_y'] = 0;
    }
    document.getElementById(players[index]['name']).style.top = players[index]['location_y'] + "%";
    updateCatchAlert();
});

rxjs.fromEvent(socket, 'goLeft').subscribe((index)=>{
    if(players[index]['location_x'] >= 5){
        players[index]['location_x'] -= 5;
    } else {
        players[index]['location_x'] = 0;
    }
    document.getElementById(players[index]['name']).style.left = players[index]['location_x'] + "%";
    updateCatchAlert();
});

rxjs.fromEvent(socket, 'goLeftRocket').subscribe((index)=>{
    if(players[index]['location_x'] >= 10){
        players[index]['location_x'] -= 10;
    } else {
        players[index]['location_x'] = 0;
    }
    document.getElementById(players[index]['name']).style.left = players[index]['location_x'] + "%";
    updateCatchAlert();
});

rxjs.fromEvent(socket, 'goRight').subscribe((index)=>{
    if(players[index]['location_x'] <= 85){
        players[index]['location_x'] += 5;
    } else {
        players[index]['location_x'] = 90;
    }
    document.getElementById(players[index]['name']).style.left = players[index]['location_x'] + "%";
    updateCatchAlert(); 
});

rxjs.fromEvent(socket, 'goRightRocket').subscribe((index)=>{
    if(players[index]['location_x'] <= 80){
        players[index]['location_x'] += 10;
    } else {
        players[index]['location_x'] = 90;
    }
    document.getElementById(players[index]['name']).style.left = players[index]['location_x'] + "%";
    updateCatchAlert();
});

rxjs.fromEvent(socket, 'playerCaught').subscribe((ind)=>{
    if (getIndex() == ind){
        alert('You are caught!');
        timerSubscription.unsubscribe();
        document.getElementById('time').style.width = "100%";
        if (players[getIndex()]["level"] == 1){
            seconds = 60;
        } else {
            seconds = 120;
        }
        // timer.next(seconds);
        timer = second.pipe(rxjs.operators.take(seconds));

        timerSubscription = timer.subscribe(
            (sec) => {
                var newWidth = 100 * (seconds - sec - 1) / seconds;
                document.getElementById('time').style.width = newWidth + "%";
                if (sec == seconds-1){
                    alert('level up!');
                    if (players[getIndex()]['level'] == 1){
                        upgradeToLevel2(getIndex());
                    } else {
                        // upgrade to level 3
                    }
                    socket.emit('updatePlayer', players[getIndex()]);
                }
            },
        );
    } else if(catchButtonClicked){
        catchButtonClicked = false;
        playersCaught++;
        // level up
        if (players[getIndex()]['level'] == 1){
            alert('Level up!');
            upgradeToLevel2(getIndex());
            // document.getElementById('level').innerHTML = "Level 2";
            // document.getElementById('backpack').innerHTML = "Ice cube: " + players[getIndex()]['iceCube'];
            // updatePlayerCircle(players[getIndex()]["name"], 2);
            socket.emit('updatePlayer', players[getIndex()]);
        } else if(players[getIndex()]['level'] == 2){
            if (playersCaught == 2){
                // level up
                alert('Level up!');
                upgradeToLevel3(getIndex());
                socket.emit('updatePlayer', players[getIndex()]);
            }
        }
    }
});

rxjs.fromEvent(socket, 'updatePlayer').subscribe(
    (data) => {
        players[data['index']] = data;
        updatePlayerCircle(players[data['index']]["name"], players[data['index']]["level"]);
    }
);

rxjs.fromEvent(socket, 'playerQuit').subscribe((data) => {
    if (data == getIndex()){
        console.log('you are quitting');
        if (!this_player['toChase']){
            timerSubscription.unsubscribe();
            // delete time bar
            document.getElementById('time').remove();
        }
        var name = players[data]['name'];
        // document.getElementById(name).style.display = "none";
        document.getElementById(name).remove();
        players.splice(data, 1);
        this_player = {};
    } else {
        console.log('one player quit');
        var name = players[data]['name'];
        players.splice(data, 1);
        document.getElementById(name).remove();
    }
});

rxjs.fromEvent(socket, 'paralysePlayer').subscribe((data) => {
    if (this_player['name'] == data['name']){
        alert('You are frozen!');
        document.getElementById('controller').style.display = "none";
        document.getElementById('paralysed').style.display = "flex";
        frozenSubscription = rxjs.interval(1000).pipe(rxjs.operators.take(10)).subscribe(
            (sec) => {
                var newWidth = 100 * (10 - sec - 1) / 10;
                document.getElementById('paralysedTime').style.width = newWidth + "%";
                if (sec == 9){
                    // upgradeToLevel2(getIndex());
                    // socket.emit('updatePlayer', players[getIndex()]);
                    socket.emit('unfrozen', data);
                }
            }
        );
    }
    players[data['index']] = data;
    document.getElementById(data['name']).style.borderRadius = "0%";
});

rxjs.fromEvent(socket, 'unfrozen').subscribe((data) => {
    if (data['name'] == this_player['name']){
        document.getElementById('paralysed').style.display = "none";
        document.getElementById('controller').style.display = "grid";
    }
    players[data['index']] = data;
    document.getElementById(data['name']).style.borderRadius = "50%";
});

rxjs.fromEvent(socket, 'useShields').subscribe((data) => {
    // if (data['name'] == this_player['name']){
    //     document.getElementById('paralysed').style.display = "none";
    //     document.getElementById('controller').style.display = "grid";
    //     document.getElementById('tools').innerHTML = "Shields: " + data['shields'];
    // } 
    players[data['index']] = data;
    document.getElementById(data['name']).style.borderRadius = "50%";
});

rxjs.fromEvent(socket, 'invisible').subscribe((data) => {
    document.getElementById(players[data]['name']).style.display = "none";
});

rxjs.fromEvent(socket, 'invisibilityStop').subscribe((data) => {
    if (getIndex() == data){
        document.getElementById(players[data]['name']).style.backgroundColor = "rgb(255, 255, 0)";
    } else {
        document.getElementById(players[data]['name']).style.display = "flex";
    }
});